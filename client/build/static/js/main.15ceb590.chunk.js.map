{"version":3,"sources":["serviceWorker.js","login/styles.js","login/login.js","signup/styles.js","signup/signup.js","chatlist/styles.js","chatlist/chatList.js","dashboard/styles.js","chatview/styles.js","chatview/chatView.js","chattextbox/styles.js","chattextbox/chatTextBox.js","newchat/styles.js","newchat/newChat.js","dashboard/dashboard.js","welcome/welcome.js","index.js"],"names":["Boolean","window","location","hostname","match","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","noAccountHeader","signUpLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","LoginComponent","userTyping","type","e","setState","email","target","value","password","submitLogin","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","loginError","console","log","classes","this","className","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","id","onChange","Button","to","React","Component","withStyles","hasAccountHeader","logInLink","SignupComponent","formIsValid","passwordConfirmation","submitSignup","createUserWithEmailAndPassword","authRes","userObj","user","firestore","collection","doc","set","dbError","signupError","authError","root","backgroundColor","palette","background","height","position","left","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","top","right","ChatListComponent","newChat","newChatBtnFn","selectChat","index","selectChatFn","userIsSender","chat","messages","length","sender","userEmail","chats","onClick","List","map","_chat","_index","key","ListItem","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","users","filter","_user","split","ListItemText","primary","secondary","Fragment","message","substring","receiverHasRead","ListItemIcon","Divider","signOutBtn","bottom","content","overflow","boxSizing","overflowY","userSent","float","clear","wordWrap","friendSent","chatHeader","fontSize","paddingTop","ChatViewComponent","componentDidUpdate","container","document","getElementById","scrollTo","scrollHeight","undefined","_usr","_msg","sendBtn","chatTextBoxContainer","chatTextBox","ChatTextBoxComponent","keyCode","submitMessage","chatText","messageValid","txt","replace","submitMessageFn","userClickedInput","messageReadFn","TextField","placeholder","onKeyUp","onFocus","input","NewChatComponent","username","submitNewChat","a","userExists","chatExists","goToChat","createChat","newChatSubmitFn","sendTo","goToChatFn","buildDocKey","currentUser","sort","join","docKey","get","exists","usersSnapshot","docs","_doc","data","includes","serverError","DashboardComponent","signOut","chatIndex","selectedChat","newChatFormVisible","messageRead","msg","update","FieldValue","arrayUnion","timestamp","Date","now","friend","newChatBtnClicked","clickedChatWhereNotSender","usersInChat","find","every","indexOf","newChatSubmit","chatObj","componentDidMount","onAuthStateChanged","where","onSnapshot","res","WelcomeComponent","AppBar","Toolbar","noWrap","Container","maxWidth","align","gutterBottom","paragraph","Grid","justify","item","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","exact","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.15ceb590.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const styles = (theme) => ({\r\n  main: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\r\n      theme.spacing.unit * 3\r\n    }px`,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  noAccountHeader: {\r\n    width: \"100%\",\r\n  },\r\n  signUpLink: {\r\n    width: \"100%\",\r\n    textDecoration: \"none\",\r\n    color: \"#303f9f\",\r\n    fontWeight: \"bolder\",\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nclass LoginComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      loginError: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline></CssBaseline>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log In\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={(e) => this.submitLogin(e)}>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"login-email-input\">\r\n                Enter Your Email\r\n              </InputLabel>\r\n              <Input\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                id=\"login-email-input\"\r\n                onChange={(e) => this.userTyping(\"email\", e)}\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"login-password-input\">\r\n                Enter Your password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                id=\"login-password-input\"\r\n                onChange={(e) => this.userTyping(\"password\", e)}\r\n              ></Input>\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Log In\r\n            </Button>\r\n          </form>\r\n          {this.state.loginError ? (\r\n            <Typography\r\n              className={classes.errorText}\r\n              component=\"h5\"\r\n              variant=\"h6\"\r\n            >\r\n              Incorrect Login Information\r\n            </Typography>\r\n          ) : null}\r\n          <Typography\r\n            component=\"h5\"\r\n            variant=\"h6\"\r\n            className={classes.noAccountHeader}\r\n          >\r\n            Don't Have An Account?\r\n          </Typography>\r\n          <Link className={classes.signUpLink} to=\"/signup\">\r\n            Sign Up\r\n          </Link>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case \"email\":\r\n        this.setState({ email: e.target.value });\r\n        break;\r\n\r\n      case \"password\":\r\n        this.setState({ password: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        () => {\r\n          this.props.history.push(\"/dashboard\");\r\n        },\r\n        (err) => {\r\n          this.setState({ loginError: \"Server Error\" });\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(LoginComponent);\r\n","const styles = (theme) => ({\r\n  main: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\r\n      theme.spacing.unit * 3\r\n    }px`,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  hasAccountHeader: {\r\n    width: \"100%\",\r\n  },\r\n  logInLink: {\r\n    width: \"100%\",\r\n    textDecoration: \"none\",\r\n    color: \"#303f9f\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport CssBassline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styles from \"./styles\";\r\nconst firebase = require(\"firebase\");\r\n\r\nclass SignupComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      passwordConfirmation: null,\r\n      signupError: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBassline></CssBassline>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-email-input\">\r\n                Enter Your Email\r\n              </InputLabel>\r\n              <Input\r\n                autoComplete=\"email\"\r\n                onChange={(e) => this.userTyping(\"email\", e)}\r\n                autoFocus\r\n                id=\"signup-email-input\"\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-password-input\">\r\n                Create A Password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                onChange={(e) => this.userTyping(\"password\", e)}\r\n                id=\"signup-password-input\"\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-password-confirmation-input\">\r\n                Confirm Your Password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                onChange={(e) => this.userTyping(\"passwordConfirmation\", e)}\r\n                id=\"signup-password-confirmation-input\"\r\n              ></Input>\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n          {this.state.signupError ? (\r\n            <Typography\r\n              className={classes.errorText}\r\n              component=\"h5\"\r\n              variant=\"h6\"\r\n            >\r\n              {this.state.signupError}\r\n            </Typography>\r\n          ) : null}\r\n          <Typography\r\n            component=\"h5\"\r\n            variant=\"h6\"\r\n            className={classes.hasAccountHeader}\r\n          >\r\n            Already Have An Account?\r\n          </Typography>\r\n          <Link className={classes.logInLink} to=\"/login\">\r\n            Login\r\n          </Link>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\r\n\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case \"email\":\r\n        this.setState({ email: e.target.value });\r\n        break;\r\n\r\n      case \"password\":\r\n        this.setState({ password: e.target.value });\r\n        break;\r\n\r\n      case \"passwordConfirmation\":\r\n        this.setState({ passwordConfirmation: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitSignup = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.formIsValid()) {\r\n      this.setState({ signupError: \"Passwords do not match\" });\r\n      return;\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        (authRes) => {\r\n          const userObj = {\r\n            email: authRes.user.email,\r\n          };\r\n          firebase\r\n            .firestore()\r\n            .collection(\"users\")\r\n            .doc(this.state.email)\r\n            .set(userObj)\r\n            .then(\r\n              () => {\r\n                this.props.history.push(\"/dashboard\");\r\n              },\r\n              (dbError) => {\r\n                console.log(dbError);\r\n                this.setState({ signupError: \"Failed to add user\" });\r\n              }\r\n            );\r\n        },\r\n        (authError) => {\r\n          console.log(authError);\r\n          this.setState({ signupError: \"Failed to add user\" });\r\n        }\r\n      );\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(SignupComponent);\r\n","const styles = (theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: \"calc(100% - 35px)\",\r\n    position: \"absolute\",\r\n    left: \"0\",\r\n    width: \"300px\",\r\n    boxShadow: \"0px 0px 2px black\",\r\n  },\r\n  listItem: {\r\n    cursor: \"pointer\",\r\n  },\r\n  newChatBtn: {\r\n    borderRadius: \"0px\",\r\n    height: \"50px\",\r\n  },\r\n  unreadMessage: {\r\n    color: \"red\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    right: \"5px\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styles from \"./styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nclass ChatListComponent extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    if (this.props.chats.length > 0) {\r\n      return (\r\n        <main className={classes.root}>\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"primary\"\r\n            className={classes.newChatBtn}\r\n            onClick={this.newChat}\r\n          >\r\n            New Message\r\n          </Button>\r\n          <List>\r\n            {this.props.chats.map((_chat, _index) => {\r\n              return (\r\n                <div key={_index}>\r\n                  <ListItem\r\n                    onClick={() => this.selectChat(_index)}\r\n                    className={classes.listItem}\r\n                    selected={this.props.selectedChatIndex === _index}\r\n                    alignItems=\"flex-start\"\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar alt=\"Remy Sharp\">\r\n                        {\r\n                          _chat.users\r\n                            .filter(\r\n                              (_user) => _user !== this.props.userEmail\r\n                            )[0]\r\n                            .split(\"\")[0]\r\n                        }\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        _chat.users.filter(\r\n                          (_user) => _user !== this.props.userEmail\r\n                        )[0]\r\n                      }\r\n                      secondary={\r\n                        <React.Fragment>\r\n                          <Typography component=\"span\" color=\"textPrimary\">\r\n                            {_chat.messages[\r\n                              _chat.messages.length - 1\r\n                            ].message.substring(0, 30)}\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      }\r\n                    ></ListItemText>\r\n                    {_chat.receiverHasRead === false &&\r\n                    !this.userIsSender(_chat) ? (\r\n                      <ListItemIcon>\r\n                        <NotificationsIcon\r\n                          className={classes.unreadMessage}\r\n                        ></NotificationsIcon>\r\n                      </ListItemIcon>\r\n                    ) : null}\r\n                  </ListItem>\r\n                  <Divider></Divider>\r\n                </div>\r\n              );\r\n            })}\r\n          </List>\r\n        </main>\r\n      );\r\n    } else {\r\n      return (\r\n        <main className={classes.root}>\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"primary\"\r\n            onClick={this.newChat}\r\n            className={classes.newChatBtn}\r\n          >\r\n            New Message\r\n          </Button>\r\n          <List></List>\r\n        </main>\r\n      );\r\n    }\r\n  }\r\n\r\n  newChat = () => {\r\n    this.props.newChatBtnFn();\r\n  };\r\n\r\n  selectChat = (index) => {\r\n    this.props.selectChatFn(index);\r\n  };\r\n\r\n  userIsSender = (chat) =>\r\n    chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\r\n}\r\n\r\nexport default withStyles(styles)(ChatListComponent);\r\n","const styles = (theme) => ({\r\n  signOutBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0px\",\r\n    left: \"0px\",\r\n    width: \"300px\",\r\n    borderRadius: \"0px\",\r\n    backgroundColor: \"#227092\",\r\n    height: \"35px\",\r\n    boxShadow: \"0px 0px 2px black\",\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","const styles = (theme) => ({\r\n  content: {\r\n    height: \"calc(100vh - 100px)\",\r\n    overflow: \"auto\",\r\n    padding: \"25px\",\r\n    marginLeft: \"300px\",\r\n    boxSizing: \"border-box\",\r\n    overflowY: \"scroll\",\r\n    top: \"50px\",\r\n    width: \"calc(100% - 300px)\",\r\n    position: \"absolute\",\r\n  },\r\n\r\n  userSent: {\r\n    float: \"left\",\r\n    clear: \"both\",\r\n    padding: \"20px\",\r\n    boxSizing: \"border-box\",\r\n    wordWrap: \"break-word\",\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#f5564c\",\r\n    color: \"white\",\r\n    width: \"300px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n\r\n  friendSent: {\r\n    float: \"right\",\r\n    clear: \"both\",\r\n    padding: \"20px\",\r\n    boxSizing: \"border-box\",\r\n    wordWrap: \"break-word\",\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#f57067\",\r\n    color: \"white\",\r\n    width: \"300px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n\r\n  chatHeader: {\r\n    width: \"calc(100% - 301px)\",\r\n    height: \"50px\",\r\n    backgroundColor: \"#f23d30\",\r\n    position: \"fixed\",\r\n    marginLeft: \"301px\",\r\n    fontSize: \"18px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    paddingTop: \"10px\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport styles from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nclass ChatViewComponent extends React.Component {\r\n  componentDidUpdate = () => {\r\n    const container = document.getElementById(\"chatview-container\");\r\n    if (container) container.scrollTo(0, container.scrollHeight);\r\n  };\r\n\r\n  render() {\r\n    const { classes, chat, user } = this.props;\r\n\r\n    if (chat === undefined) {\r\n      return <main id=\"chatview-container\" className={classes.content}></main>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div className={classes.chatHeader}>\r\n            {chat.users.filter((_usr) => _usr !== user)[0]}\r\n          </div>\r\n          <main id=\"chatview-container\" className={classes.content}>\r\n            {chat.messages.map((_msg, _index) => {\r\n              return (\r\n                <div\r\n                  key={_index}\r\n                  className={\r\n                    _msg.sender === user ? classes.friendSent : classes.userSent\r\n                  }\r\n                >\r\n                  {_msg.message}\r\n                </div>\r\n              );\r\n            })}\r\n          </main>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ChatViewComponent);\r\n","const styles = (theme) => ({\r\n  sendBtn: {\r\n    color: \"blue\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"gray\",\r\n    },\r\n  },\r\n\r\n  chatTextBoxContainer: {\r\n    position: \"absolute\",\r\n    bottom: \"15px\",\r\n    left: \"315px\",\r\n    boxSizing: \"border-box\",\r\n    overflow: \"auto\",\r\n    width: \"calc(100% - 300px - 50px)\",\r\n  },\r\n\r\n  chatTextBox: {\r\n    width: \"calc(100% - 25px)\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Send from \"@material-ui/icons/Send\";\r\nimport styles from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nclass ChatTextBoxComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      chatText: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.chatTextBoxContainer}>\r\n        <TextField\r\n          placeholder=\"Type your message...\"\r\n          onKeyUp={(e) => this.userTyping(e)}\r\n          id=\"chattextbox\"\r\n          className={classes.chatTextBox}\r\n          onFocus={this.userClickedInput}\r\n        ></TextField>\r\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  userTyping = (e) =>\r\n    e.keyCode === 13\r\n      ? this.submitMessage()\r\n      : this.setState({ chatText: e.target.value });\r\n  messageValid = (txt) => txt && txt.replace(/\\s/g, \"\").length;\r\n\r\n  submitMessage = () => {\r\n    if (this.messageValid(this.state.chatText)) {\r\n      this.props.submitMessageFn(this.state.chatText);\r\n      document.getElementById(\"chattextbox\").value = \"\";\r\n    }\r\n  };\r\n\r\n  userClickedInput = () => this.props.messageReadFn();\r\n}\r\n\r\nexport default withStyles(styles)(ChatTextBoxComponent);\r\n","const styles = (theme) => ({\r\n  main: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE 11 issue.\r\n    marginLeft: theme.spacing() * 3,\r\n    marginRight: theme.spacing() * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    padding: `${theme.spacing() * 2}px ${theme.spacing() * 3}px ${\r\n      theme.spacing() * 3\r\n    }px`,\r\n    position: \"absolute\",\r\n    width: \"350px\",\r\n    top: \"50px\",\r\n    left: \"calc(50% + 150px - 175px)\",\r\n  },\r\n  input: {},\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(),\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing() * 3,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Button,\r\n  Paper,\r\n  withStyles,\r\n  CssBaseline,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport styles from \"./styles\";\r\nconst firebase = require(\"firebase\");\r\n\r\nclass NewChatComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: null,\r\n      message: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline></CssBaseline>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Send a message\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={(e) => this.submitNewChat(e)}\r\n          >\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"new-chat-username\">\r\n                Enter Your Friend's Email\r\n              </InputLabel>\r\n              <Input\r\n                required\r\n                className={classes.input}\r\n                autoFocus\r\n                onChange={(e) => this.userTyping(\"username\", e)}\r\n                id=\"new-chat-username\"\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"new-chat-message\">\r\n                Enter Your Message\r\n              </InputLabel>\r\n              <Input\r\n                required\r\n                className={classes.input}\r\n                onChange={(e) => this.userTyping(\"message\", e)}\r\n                id=\"new-chat-message\"\r\n              ></Input>\r\n            </FormControl>\r\n            <Button\r\n              fullWidth\r\n              className={classes.submit}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case \"username\":\r\n        this.setState({ username: e.target.value });\r\n        break;\r\n\r\n      case \"message\":\r\n        this.setState({ message: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitNewChat = async (e) => {\r\n    e.preventDefault();\r\n    const userExists = await this.userExists();\r\n    if (userExists) {\r\n      const chatExists = await this.chatExists();\r\n      chatExists ? this.goToChat() : this.createChat();\r\n    }\r\n  };\r\n\r\n  createChat = () => {\r\n    this.props.newChatSubmitFn({\r\n      sendTo: this.state.username,\r\n      message: this.state.message,\r\n    });\r\n  };\r\n\r\n  goToChat = () =>\r\n    this.props.goToChatFn(this.buildDocKey(), this.state.message);\r\n\r\n  buildDocKey = () => {\r\n    return [firebase.auth().currentUser.email, this.state.username]\r\n      .sort()\r\n      .join(\":\");\r\n  };\r\n\r\n  chatExists = async () => {\r\n    const docKey = this.buildDocKey();\r\n    const chat = await firebase\r\n      .firestore()\r\n      .collection(\"chats\")\r\n      .doc(docKey)\r\n      .get();\r\n    console.log(chat.exists);\r\n    return chat.exists;\r\n  };\r\n\r\n  userExists = async () => {\r\n    const usersSnapshot = await firebase.firestore().collection(\"users\").get();\r\n    const exists = usersSnapshot.docs\r\n      .map((_doc) => _doc.data().email)\r\n      .includes(this.state.username);\r\n    this.setState({ serverError: !exists });\r\n    return exists;\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(NewChatComponent);\r\n","import React from \"react\";\r\nimport ChatListComponent from \"../chatlist/chatList\";\r\nimport { Button, withStyles } from \"@material-ui/core\";\r\nimport styles from \"./styles\";\r\nimport ChatViewComponent from \"../chatview/chatView\";\r\nimport ChatTextBoxComponent from \"../chattextbox/chatTextBox\";\r\nimport NewChatComponent from \"../newchat/newChat\";\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nclass DashboardComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedChat: null,\r\n      newChatFormVisible: false,\r\n      email: null,\r\n      chats: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <ChatListComponent\r\n          history={this.props.history}\r\n          newChatBtnFn={this.newChatBtnClicked}\r\n          selectChatFn={this.selectChat}\r\n          chats={this.state.chats}\r\n          userEmail={this.state.email}\r\n          selectedChatIndex={this.state.selectedChat}\r\n        ></ChatListComponent>\r\n        {this.state.newChatFormVisible ? null : (\r\n          <ChatViewComponent\r\n            user={this.state.email}\r\n            chat={this.state.chats[this.state.selectedChat]}\r\n          ></ChatViewComponent>\r\n        )}\r\n        {this.state.selectedChat !== null && !this.state.newChatFormVisible ? (\r\n          <ChatTextBoxComponent\r\n            messageReadFn={this.messageRead}\r\n            submitMessageFn={this.submitMessage}\r\n          ></ChatTextBoxComponent>\r\n        ) : null}\r\n        {this.state.newChatFormVisible ? (\r\n          <NewChatComponent\r\n            goToChatFn={this.goToChat}\r\n            newChatSubmitFn={this.newChatSubmit}\r\n          ></NewChatComponent>\r\n        ) : null}\r\n        <Button className={classes.signOutBtn} onClick={this.signOut}>\r\n          Sign Out\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  signOut = () => firebase.auth().signOut();\r\n\r\n  selectChat = async (chatIndex) => {\r\n    await this.setState({ selectedChat: chatIndex, newChatFormVisible: false });\r\n    this.messageRead();\r\n  };\r\n\r\n  submitMessage = (msg) => {\r\n    const docKey = this.buildDocKey(\r\n      this.state.chats[this.state.selectedChat].users.filter(\r\n        (_usr) => _usr !== this.state.email\r\n      )[0]\r\n    );\r\n    firebase\r\n      .firestore()\r\n      .collection(\"chats\")\r\n      .doc(docKey)\r\n      .update({\r\n        messages: firebase.firestore.FieldValue.arrayUnion({\r\n          sender: this.state.email,\r\n          message: msg,\r\n          timestamp: Date.now(),\r\n        }),\r\n        receiverHasRead: false,\r\n      });\r\n  };\r\n\r\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(\":\");\r\n\r\n  newChatBtnClicked = () =>\r\n    this.setState({ newChatFormVisible: true, selectedChat: null });\r\n\r\n  messageRead = () => {\r\n    const docKey = this.buildDocKey(\r\n      this.state.chats[this.state.selectedChat].users.filter(\r\n        (_usr) => _usr !== this.state.email\r\n      )[0]\r\n    );\r\n    if (this.clickedChatWhereNotSender(this.state.selectedChat)) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"chats\")\r\n        .doc(docKey)\r\n        .update({ receiverHasRead: true });\r\n    } else {\r\n      console.log(\"Click message where the user was the sender\");\r\n    }\r\n  };\r\n\r\n  goToChat = async (docKey, msg) => {\r\n    const usersInChat = docKey.split(\":\");\r\n    const chat = this.state.chats.find((_chat) =>\r\n      usersInChat.every((_user) => _chat.users.includes(_user))\r\n    );\r\n    this.setState({ newChatFormVisible: false });\r\n    await this.selectChat(this.state.chats.indexOf(chat));\r\n    this.submitMessage(msg);\r\n  };\r\n\r\n  newChatSubmit = async (chatObj) => {\r\n    const docKey = this.buildDocKey(chatObj.sendTo);\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"chats\")\r\n      .doc(docKey)\r\n      .set({\r\n        receiverHasRead: false,\r\n        users: [this.state.email, chatObj.sendTo],\r\n        messages: [\r\n          {\r\n            message: chatObj.message,\r\n            sender: this.state.email,\r\n          },\r\n        ],\r\n      });\r\n    this.setState({ newChatFormVisible: false });\r\n    this.selectChat(this.state.chats.length - 1);\r\n  };\r\n\r\n  clickedChatWhereNotSender = (chatIndex) =>\r\n    this.state.chats[chatIndex].messages[\r\n      this.state.chats[chatIndex].messages.length - 1\r\n    ].sender !== this.state.email;\r\n\r\n  componentDidMount = () => {\r\n    firebase.auth().onAuthStateChanged(async (_usr) => {\r\n      if (!_usr) this.props.history.push(\"/login\");\r\n      else {\r\n        await firebase\r\n          .firestore()\r\n          .collection(\"chats\")\r\n          .where(\"users\", \"array-contains\", _usr.email)\r\n          .onSnapshot(async (res) => {\r\n            const chats = res.docs.map((_doc) => _doc.data());\r\n            await this.setState({\r\n              email: _usr.email,\r\n              chats: chats,\r\n            });\r\n            console.log(this.state);\r\n          });\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(DashboardComponent);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nclass WelcomeComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar position=\"relative\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Chatsapp\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              Welcome\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n            >\r\n              Chatsapp is a free messaging web app. Chatsapp allows you to\r\n              message friends and family. Leave Whatsapp behind, Chatsapp is the\r\n              future.\r\n            </Typography>\r\n            <Grid container spacing={2} justify=\"center\">\r\n              <Grid item>\r\n                <Link to=\"/login\">\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Login\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\">\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Signup\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WelcomeComponent;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport LoginComponent from \"./login/login\";\nimport SignupComponent from \"./signup/signup\";\nimport DashboardComponent from \"./dashboard/dashboard\";\nimport WelcomeComponent from \"./welcome/welcome\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCzT75cg_g0FCHbAFMogR4WLfz5ZDvBxcc\",\n  authDomain: \"react-chat-da5ca.firebaseapp.com\",\n  databaseURL: \"https://react-chat-da5ca.firebaseio.com\",\n  projectId: \"react-chat-da5ca\",\n  storageBucket: \"react-chat-da5ca.appspot.com\",\n  messagingSenderId: \"264646939049\",\n  appId: \"1:264646939049:web:f7661934cb0cc9062fb4b8\",\n  measurementId: \"G-8FH7TW23KF\",\n});\n\nconst routing = (\n  <Router>\n    <div id=\"routing-container\">\n      <Route exact path=\"/\" component={WelcomeComponent}></Route>\n      <Route exact path=\"/login\" component={LoginComponent}></Route>\n      <Route exact path=\"/signup\" component={SignupComponent}></Route>\n      <Route exact path=\"/dashboard\" component={DashboardComponent}></Route>\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}